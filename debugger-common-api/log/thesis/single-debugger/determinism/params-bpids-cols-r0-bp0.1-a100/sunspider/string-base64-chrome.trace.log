Breakpoint 0 Set at 42:21
Breakpoint 1 Set at 42:21
Breakpoint 2 Set at 119:11
Breakpoint 3 Set at 75:21
Breakpoint 4 Set at 128:5
Breakpoint 5 Set at 42:21
Breakpoint 6 Set at 96:9
Breakpoint 7 Set at 92:18
Breakpoint 8 Set at 121:15
Breakpoint 9 Set at 42:21
Breakpoint 10 Set at 103:9
Breakpoint 11 Set at 42:21
Breakpoint 12 Set at 60:9
Paused at 42:21
	Hit Breakpoint(s) 0, 1, 5, 9, 11
	Call Stack:  
	Bindings: 
Paused at 75:21
	Hit Breakpoint(s) 3
	Call Stack:  
	Bindings: 
Paused at 119:11
	Hit Breakpoint(s) 2
	Call Stack:  
	Bindings: 
Paused at 121:15
	Hit Breakpoint(s) 8
	Call Stack:  
	Bindings: 
Paused at 121:20
	Call Stack:  
	Bindings: 
Paused at 128:5
	Hit Breakpoint(s) 4
	Call Stack:  
	Bindings: 
Paused at 60:9
	Hit Breakpoint(s) 12
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 61:9
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 62:13
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 129:19
	Call Stack:  
	Bindings: 
Paused at 92:18
	Hit Breakpoint(s) 7
	Call Stack: base64ToString 
	Bindings: c: undefined
		data: string = 
		i: undefined
		leftbits: number = 0
		leftdata: number = 0
		padding: undefined
		result: string = 
Paused at 92:23
	Call Stack: base64ToString 
	Bindings: c: undefined
		data: string = 
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: undefined
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 0
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 23
		data: string = 
		i: number = 1
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 23
		data: string = 
		i: number = 1
		leftbits: number = 12
		leftdata: number = 1751
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 9
		data: string = 
		i: number = 2
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 9
		data: string = 
		i: number = 2
		leftbits: number = 10
		leftdata: number = 457
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 55
		data: string = 
		i: number = 3
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 55
		data: string = 
		i: number = 3
		leftbits: number = 8
		leftdata: number = 119
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 55
		data: string = 
		i: number = 3
		leftbits: number = 8
		leftdata: number = 119
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 30
		data: string = 
		i: number = 4
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 30
		data: string = 
		i: number = 4
		leftbits: number = 6
		leftdata: number = 30
		padding: boolean = false
		result: string = 
Paused at 92:39
	Call Stack: base64ToString 
	Bindings: c: number = 30
		data: string = 
		i: number = 4
		leftbits: number = 6
		leftdata: number = 30
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 30
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 30
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 1927
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 12
		leftdata: number = 1927
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 6
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 6
		leftbits: number = 10
		leftdata: number = 481
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 7
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 7
		leftbits: number = 8
		leftdata: number = 97
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 7
		leftbits: number = 8
		leftdata: number = 97
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 97
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 97
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 97
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 8
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 8
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 8
		leftbits: number = 6
		leftdata: number = 25
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 9
		leftbits: number = 6
		leftdata: number = 25
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 9
		leftbits: number = 6
		leftdata: number = 25
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 9
		leftbits: number = 12
		leftdata: number = 1622
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 9
		data: string = 
		i: number = 10
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 9
		data: string = 
		i: number = 10
		leftbits: number = 10
		leftdata: number = 393
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 9
		data: string = 
		i: number = 10
		leftbits: number = 10
		leftdata: number = 393
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 8
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 8
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 0
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 0
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 11
		leftbits: number = 0
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 12
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 12
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 12
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 12
		leftdata: number = 1750
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 12
		leftdata: number = 1750
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1750
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1750
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1750
		padding: boolean = false
		result: string = 
Paused at 92:39
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 92:23
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 93:30
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 57
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 57
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 57
		data: string = 
		i: number = 14
		leftbits: number = 10
		leftdata: number = 441
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 15
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 15
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 49
		data: string = 
		i: number = 15
		leftbits: number = 8
		leftdata: number = 113
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 16
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 16
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 16
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 17
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 17
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 17
		leftbits: number = 12
		leftdata: number = 1671
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 18
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 18
		leftbits: number = 10
		leftdata: number = 461
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 37
		data: string = 
		i: number = 19
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 37
		data: string = ByaG1uY3dyYXl3a2htcGJid21xbWRrdXdtcWRwaHZkcGJrcnBub3N5a3ZyaHhidHlnZ2prYXNhaWptbmJubm1tanN4a2xsamtudW9xeW9lYmlxcmJuanhnbGRxZGthYXZiaHF4eXJjZ3JhdnZieGZvaHR2Y3lvdWR2bWl2bWN5bGtjbGNqY3F2dXRsampiaXd2c3Rxa21yeGthZHNtbnRqbHV1ZGlyeXNveGliaGpiYWNpcW9hc3Vqd3hua2ppeW1ncXljbW9iYndlZ2p2ZHV2ZHN0cXNubGp4cGpxa29qY25oZnBpaXljZHhlZGFudXJoYmFzbmprbnVnY3djYXJleGxtdnlodGdvamxhY3Boa3ByY3F0cW5oaWtidG9pd3hnYXlyd3ViaGV1bWp4cW5zZGdxbmphYWV5c3lscXBsZmRxeHVwcnV0ZGRscWRkc2ZwZXZ1eHBnb3Z0ZXl0eGxhZm9ucW1mY2dpcm9pb3ZyYmFxbWllb2VkYXJjZ3FidHJueGF1eHllb3lwbWpweGp0a3N4cXB1bHZ2amhpZ2RhcWVoYnVvdXl5cmp4d2R2cnRnb3dnZWh0bG5rdWtzeGVya3B3am1yZGt2aG5qbmRtaHFma3lqd29pc29tZGFmbWp1d2pqdWVveHRtcmVha2hheGNicHdjZW5hcG91dW9vaXR3c3Roa2NnYnNhandqa3hndXVvbWlleHNxYm5wZWx1cm5yYXl2Z2FpYmlpdnFhd3d2dHRld3N5anR3bG9lZWttcWJnZG9qZXVxc2F0Ympkd3R5bm54ZnFrdnltaXJ1aHV3YWdyYnB0cXBicnh3ZG5keXFvcnVlb2Nnc2pnZ3VramhpamlmbWZobXNnbnlvY2NsZHFveXNpZXh5bmp3bnFycGp2bWV0Z29jYXVzdmFmd3Bmbm55Y3Rzc2x4amh1eWlrbHFwZWNtdWtmZXdseXJvZ293anlua3F4ZWFpeWx2cmt2cXdmeWNlbmtzbXhoa3RndmdiZGlzZG1tandzYWttbm93YmFpcmFyaXR0bHhrcmxodXVwbWdvcGRhZ2RycHNweXBleWN1ZGZ3bGlsaGN0dmZ2eHdxa2pjamZ0dmtodGx1cXl0YW5iZ2hiYWZ5cG14b3BiYm1lb3Bhbmx3dndoeHBmYW5ycmpscWNhYm1sZ3BidHZjaWdhb2dsbndzaGRlanFva2Jzd3N1aXVrcHhkbmVuY2t3bHV2YXZpZnduY2pzZWxva2FtZ2VodmRwZ3dwbHl4YWlxYmNmdWxweWlwYXR3aGloYXBncG5rc2Rsc2ljYXZpamVuYnFuZHlzZXdja3NoYWVlbmF5eW9ueW1pdWxya3diZnlncG9rbWVtcGJ5cWpuZ3JncGJ5YXVldXN2ZHVoZHB5bWNmcG1paXh4dm51YnlzaGZtc3V2dGRkY3hmamd2cXBnbWh2a2Zqc25hdGhtZGt5dmZlaWpyYnZxb25sdHFlYW5lY2locm9qdmVlb3Nwa2xucGdxdWl4Z2tya2Fra251dmpwaW9lbWdxaGxhdm5iZWxwa2h5dGxrdm5ncGx4bGZscHZseHN3ZWx2dnRlY3hkampkZmxuZmJnaGl4YWh2ZG1zbGJia2ZlZHVsaGR2eXJlY29leXRuZnNla2R3bWp5cWt3eWtvbnV2dnZtYm9qYWFhYXN4YWpjYm1zaWNpamN0bHRxbG1xeWx3Z3lrZ29qanR4a3NydnN0eWlscHduZmR3bGlna2lvbGVzcnJrdHFrcWtla2J1cGt0eWNsdGhjdmdlYmJxd3Vzc3JkZ2pkamRtcHBnYWhib3hla3ltZmlzaWhydmFncXFtc3R5anNuZ2N5eWJtcmN5eXJra3Nzc3VpdGFjcWdzc3lnbnVudXVmb3RibnhxaGxnb2xvbHdvYW9pYXVrb294Y2lxdXdicGhzY3dzbmd4a2VrcW9pbHBleXZhcHdydmxraml3ZXN4Z2Fjb2Zmb2R4cGZ0b2JnaXB3dWdua2Rnc3FiZnFkb3JzZnVlaXl3Y2xtYmZrdnFpaXR0YmlpYnhkYWVscHhpaGZ2aHl3cWZsb2Jqa3Z5cm9vdnRxYWV2dXRubHN2dG51amJ3Y2hkeXN2Z3h5d2NmdWl3ZnFhbXd0bW1zc3V5aXVxcnRtcWNud290eXVsanB0bndkcG11cWRpeWlsbmRqdGZqb2JjaXVraWVtaGFkbW9rZGlldmxubG94bWxjcHhidWRrdGpmdHhla2VjZ2x2dmJzY2NldWhwbmltZWp2bGl2aWp3YWh4aWpzcHVwc2Z4b2VuZnhvcmJoYW1nYWx3dXRnYm5ueG1veWh2aXVqbGhzbWxveWtza2VmbXh3dXRic3dwa3VnZ3NvYmpxb2lvZHRlY3lpb3Jud3lrYnRocGxjcG5rcWVhaXViaGttamJncHBraXhudXNpcnJxd3lqbnNza2VuZ3Fnc3JtaW52cmRqYmZrdnd2ZGl3aWNneWlxeGFwcmhmcGhpYW10bGJpbHlmdnFpbmNpaG1veXhzYXNrcHFmaXhzaWt5bGp1aGd5bWtna3RqdmVxcmFjeXN4cmdqZ3BsZGRhcW9iamh2dGxxb3B4ZG5vY2NhZnZveW9wYmhsbHlkdm9saGZpZnhwdmZmdHBoZnh2a29hZGNoc3lxbnN3bGdubXBhcW1rdXZ4b3Frd3Vtd2t3bmNmcXJjeGNibHl1aGJvanBtbWF1ZXNwcWZvdHh3ZW9xdHBka3htZGt1cHNtaW5sZG5vdW5pb3dqa2tiZXJjcmtwbGhyanVmcnhsZWFzbWthY2t4dXF0YWl1Y2Rmd25oYmJscXlhcXl4ZXVmdmlqdW1lbWlzYnV2Zm13aWhnbGFqb2N3Z2Fpa2NrdnFwa2ltbWF4cnNtamtwYWVkcG52cWxoZWprdnJzb25yaXF1Y3J1ZXhxY21heHFjaWNobHRna2lhcGJwam9rdWx2c3N4Z21oa3VweWZnY25nbGR4dm9hbmpwc2t4bHZ1c3lodWZjZG5td3lmamN5ZHhvZHltYnZuaXd4dHJ4dHFlb2FmcWVsaWVua254b2ZvaWp3YWJ0YWlsZHVxYWpqeHBscGRwa214cnVib2l1ZWNianBlbnludXhiZmJrbmp4Y3NoaHl3YnFpZ2h3b2xubHZvbmJwZ3Jva2xndWt2dHNrd2V3eGRsdmN4bGlmZm9pdGhsbWhmbmJsdHRoYWdrb2NiZHlmcWhieWVydHZxamdrYmF4bGRxa214cXlubm1yeXdzdWNpbXFwbHdlYmt0Y3BnYXZweGVzeGJ1YXhicGJsc2Fxb21ka2Nwa3hsa29lZXlianZwcmpxbnV0Ymh3YXBsY3RlcmZvdGVlbm15aWZwZGlkaHRkdmxqam11cXVhdXhubXJqYWxobnZrbGt0b3Nqd2J3ZXZub2ltaGFpZWhidnJlYmFvcGpyeGxhY2xyeGFvYnZ5Y2Rtcmd2a2VzaG5ld3RmdXlub3VncHBiYmZheXRmc29lZWdjbGVmY2Zjam1ya3JvdnRlc21hanFkbGlqcXVmYXJoeHJzaHB3ZmZqamlzZndibHZxeW1qY3FkbHNrdGRha3Bnbm13Z2Nja3BsZG9ocnZuc2Znd21ndGxvd2NwbW9jdm5rZmxiZG1hanhsZ3JudnBpdXh1bGhzYmtvYWRzeGZmbnRqZ3Vxc2VrZGlucGJ1ZXVwcHdydGhkaGdybGV3dG5id3Rzc2ltb2FrdW9sa2lnZ2ZjcnZhd2d2bnRobGl1YmJnZ2Vvb3J0dWhtY3VtZXZrb2xrZml5dmhrcG5lYWFhYXl5dWxic29ram5qbm5ydWhrY2dvbWthc21lcnhqYmVoY2dsYXBoanN4aGhsb3d5b3NlZmR2Y3djY3BxamJoc3RkY3J4eG12Y2t5ZHF4ZmFzcGpxZmNsaGlxb3FpZXFsY3FjZ2d1bmpocmx1amh4d2Ftd3BtaXdkcGRmZXVveGttZm1hbnhldWhqcWFla2hiZ3drbXVpa2toYm9lYmtkZ2h4Z25kZGR3bWR1YXNnYW5tb3V1d3JzZmltZW5ic3hncXhhc2JuYm9obHFkYnlwamhxdmRheXNxcXFsYmF5Y2R1a2FzcGFucW9nZHluYXJ3aXFta2twbHVpd2Jka2pxcmJyamZnZWljcWR2ZnZlcm5tYWJxbGxnZGZtdWV0eWpseHFhbnVzbmFqbnJmeWZnbGNobGljd21vdm1icnZpcW9hb3F5ZGhjbG50ZndtanN1Y2JldGZpZGxjZ21jdGx2c2ZvcWxnaW5scW1mYmtic3VxY2pjdmZ2aGlobmdkeHBpam91c3NrdnBpZGVtcGZ1aWZxb21ra21ob3R5bWphYnVmbWVneXljaHVlcWthY2pybHl5ZWFqYnNsYmpkdWVodGZjdWhjY2xlZnVoc2Zzbm5jbHNjaGhxZG1ldmdod2F0aHBmZ2loeWd1cW5hanNjdmVpbXlycmZ2bXFra2tkcG1seGNqcmprcmx2YWphc3Jocmlya2theGx1cGtrZ21ud3dkYXBwaXVuZHJmbnN0amRxaHhoZGZ2ZHVmcWtoY2VkeWtreWN2eXlwZHRpcWt2cGRxZ2l3dHJxcHFtZWxkdmdvY3FjcHByYWJsZHNvZGJ5ZW93ZXR0a21hcW13Ym5qcXhqcGNvc3h0a2luamVqbXlqaGZtcm9mbXh4anBudWdqc2Rkb3hrYXBsYWl3cHJncGhmeHRuaHZpeWRvd293cml1bG5xZWZnb2dzeW91Ym5nc2dvYnlvcmlpbXVweGtreHNzeHJtZGJiZGxrYXhlbnlyY3dib3ByaWZhbHB1am14ZnViZ2Z1b3l2dGVmcWlhc29nZXdib2V0c253dm1ubHRmbWpubXZhZXR4aWltbHNxZmt3aGJ3a2twbGF4amRjZGZlbnRlbm5ieGh0am94eGV4cnJrZ2hkbnZjYnZvdm9ldGhoYmpybGFnZWd4amxxam9ya2twcnhlc3J5ZHFodW10a2p0a3htYWl2Zmx1amNzaGlvYmdjZWxzdWJ0cXFicHBkaHN4cG5mbXNmcnh0dGVhcGN1aWVudnR4bXh2a2VscW90dnNwZnJscWpuZmtjd3h5eG53bHJ4dWNhaXVhdnFkYnRjbWprdGdtdGhud2FiZWx2dGd5cXRxcHh5cmdwanZ5c3ljdmZzYnduaXJobG1ocnVmaHh2b29ud3FuaW9pZGp2bGxqam51eXV3aXZ0Ymp0c21rdGJub2xleW1yeGZmdGphZWd4c2hzZHd1ZG5kc3JsbWZ2Y3FlanJweXF4cW50d2Fhb3h3Z2pmaW9jZnhqdnZmc2Vsdm51d2xzdmJ1YXFqd3lsd3doaG5zbWljYnB1ZWNsYXl3ZGllcnFqa2hrbm5seXRkaHd0cHRkcGJteWt0Ym1sZm1ieGtjd2t2YmNrc2RlbHRla2lqb2JmY2N1eGNqZWN3Z2l1am50cGxodG1qZWdscW1sZm1jeHJkdXB0dXFwcnJ4bm11ZHRhYnV2eWx2c3JzYmppb3V1YWhtZGFkYXl2eGlxa29ibnVkZmlqc3JtYmNtdmhmanhrcG1kYXJoZ2huZGVkeGZodXBmZXRyamFpcnJoYnltdnBpd3R1b2F2bnlpYXJ4YXdsbGZ1eHFvbHZ1c2hraW9nY2tsb3ZoaGxvZmthd3J3dXF5YXhiYXBwbWprbGRxaXh0Znl3Ym92bnZib3d5YmxpbWNieWxidGNnZmhtY3RrYWZxZ25uc3FocWtrYmVwZHdzdHVlbGp3c3lyaGRqZXJxbGRwcnB5bmVmaHRhbHhkZGJycHNtaHBybWJicnhkaXdiY2F4cG9obW1lY2Jjcm9rcGpzc2dieWF0d3dreWZ3dGVnaWhlYW5ocGlzaHRybmlncmN3YnNjYWhveGpxYnh2b2pmdHBldXh4cHFkb3BwanN0c2tjZGF4ZGtkb29iaXVocHJ1ZXh2dmJuc213c3RmcWN1b3ZyZHRoeHhyeGtxd2N2d2NydG9qZWJlZnR5dGNlbWl3b2xxdWZwYmV3Ym1kbGJ2Zm9oZ3F4cnJrZWJzaHFvaGZzZnlxY2dlbHlla2Fqdm5leHJzZmlwc3l5b3FhY2JmdGJweGNlam1vdnZhYWZsY3Z1ZWV1eHJvZnlyZHdiZW1ocGhocWNtcnd4anVvZ29wa2lsbHZyZWlndHBpcm9scHRjeXNwbHJwbnl1dmtwZGRnaWFla2dtbHlyeWd3amtjcG9ram1vc3ZxamdjcWJ5a2VuamVqZ29heGRtY2d3cGhod2Vla2tvZnhjcGVsbWFqcmF0dGpzeWFqdmxobGptYXJ5cHNhanFqcXhydXNxdXZvYmx3am5rc3VxYmJ3ZHVoa3BkZHN0bG1ta3lycW5pbGRwa3VqdGNzcmZ1dGNtdWNtbmRvYWlqa3hnam9mZXdxYmRtYnhzaWprcGlneGZwaGd1Y25md3lxZ212cHFrd2lhZ21zaXFxdmhtZWtxZ3VmcW1xdnJ4a21jbGljbXRzbml3cnRmamVkbWlzamx4cmZnbW52ZXl2eG5vcW52bm9yamllaXZic2ZtZWZvaWJodG1rY3RobGd2amNidnFkbXNpaHNiamN4cWVrdnd5YmVyaHRhaHdnc29xZGNueXFtb3Jsc3Fxd3lsY3NsaHhiYW1zZGVjb3VxZnB1ZHVpcHl2ZG9zcXZseWR1Y2pqcnR0eHdjeHR5dGNvY3VpY29sd2F3YWhqdWNhaWVmZ2t4YXFqcXVsbml0YWxpeW9oaHlvdWNpbGd2dWVmZGZyZGZoeWtnc3ViaG5nanFra2NydnF4eHVlaWdpbmxqbGZwbWFwa2x4aWdyZWdiZndob2RtcW1ubm11eWF4dGdoZGNrc2lvZWRvcGtucGhreHhiY3hsdWFmYXZyaHZteW1id2dmZWJhYXZuZnhmanZyZ3l0YndiZnBtdGV5d2phcnFrd2pyaWR2Z3dpY2pybWdqZ2Z3cXdjcGhybHN1cW12cXVoaXhpeW12Z2Fpb3dzb2ViaXNncG95b3V2cHhjZXF0eGt1cWNqbmp0Ynh5aXh4aGRteW9oeXhxcWh1ZnNlcWZpY3NueW5nYnJ1am5xb3RzdHRnYmltYnR2ZWVyZG5hdWthdWhvY3JtY2N5aXRpaXJwdnVlbmtzZnJhZXd0ZGNud2VseGtkb2VlYW1teXRwbGVraWdqbmdvdWZhaHZuamppY3luYXF3bWJkdnhtbm1hanRucW5sdXJ1cXVrbnN3bGZka2libmZjYnl4aWhnYWlic3FucWdxdXNrZm9yamlmaXRxZ2VrYnVla2J3Ym9zc2h2ZnVkZXR2b2FlZHZiZ2hqb3NkbHh3dHZjZGxxc3djcnRobGJsZGl3YmJ2Z2twY3ZoeWtqbmVwYmltbWd2dW5sc251aW9yYmdvc3RxeW1mZ2lqd3J3dnlpZHdzaHZ4ZnVncGNhcXR0YW5veGZ2a2NyY3V5aGZ1ZGhscnB4dW1ibnFwYWpndGZ3dWd5d2RmdHZuaWV2c3lrc2JwZnJtZXdzdHR0bWx3dmpxbGZ2aWlxaXJqZWl2dm94bGJ3dmlwamtjd3VhYXB3bXN0a2x2cnlzcmVkZmpjaXJmaHl0dGNxbnN0eHNjdGhhdnNreGxldWNkb2FmYWNlbWN4Zmh2YWFycWdyY3FnaXF1eXNtZmFscWV5dmVpcnJkbXloZWRvbndud3J2Ynl5d2Jsa25pZHlic3FucWdrZ3diam5tZXVsYmpzeHh3YXVrcnBub25scnJzZHloc3dpa3h0bWlvc25heXloeWh3cW1la25jc2dmYWNvaHdpYXVpaW51c2piZnBvcWZtc2xlbHdoa3FleWlneHh3YWxncXVrcm9lZ2F2ZG52eWlmdXZlb3NmanJoanJuZ3luanJnYnd4a2xscnltcWdjcXBqc3ZmZHl2bWZ0amxqeWpraWRkb3RndGJldmxwZG55eGdjb2NidXR1ZXZwYmNvbnhxdGlvc3JqbWdkYnF1bWVmZHVkZ2JrbnZjdXhhaWVncHRud21xaW1zZGppdWxham9rb2ZuZGphaGNwdm1leWt1eWxsaHlqbW1xdnNza252aGVhZW1qdW1wbG5neG14bGtybHJrY2dxdXZ3ZmJiY3NhcGNrdmRjaWhwaWZxeHdkcWVqeWlua2xpaWRjanh1dW93b2t1YXBxYmxkY2RxZGx4eG5veGxzY2JlZWxxdm9pdXh1dXF4eWJtb2hvcWJ0dHVtY2R0cWtmanFsbG9hd2hyeGtwcmZla3R3eGNodmFscGZvcGhsY2dqdnNnbGhqc2lweHZpYWFsamtwaXhwcHhsaWl5YmN4ZXNpc2p4Ynd3aWRmeHFkbW9ubGloYmJyaWhhbm9ydHBmbWhhaGZtYm12ZXh4cmZncW5taWJjaWZwbnhkeWRtZnBpZ2V4bnl0Y3Z5cWtxbWZybXdjd2R2amRzam9hdHNjd21hcGJkYWFyaGlwY2lhbG95bGtqb2ZjamlvZnFtcnNkcGFoYmxmaWhocWprZm13YXVwYW5zcW9pbXJjcXVvcmZ2ZW5zaWNjcWNmZ3B5eWhuaXhmeXFjYWF5a3hycm1tbGtkYmFqd3F0cGtqbW9qa3VhYXhtYWhrY21iYmtjb21qZWp3cHhzbmh3dWVodWFwb2dkdmx0Z2h0d3hscmxmcnV3c2x5aXNyY2hpbm1mZmpmcHJuc25wd3Nqcmd1cWNpcnN5YmRxaGx1Y2x2aWJ5dG1ncm1pZHB1ZGlhaWd0dm5sa3VpaGNqa3hjY2lybW91amNteXdoeGp3bmhybmxqdGNvZnV3aGpleHBkd25wZ3RuYXNmZnJqbXBibmxlaWp1dHR3Ym9teXBzYXN5ZGZydHhzb3dsbWVscnJyYXVnYWdueHFiYm1weHFtc2J3Ymx3c3VxYm55YWhmeWxjeXRtYWNtamZ5d3Fwb2Fmd2xqc2F0Z3NyZGxmYXhlZXR2d3hhdGd5bWFzY253a2F1dmFqaGFybGdtcmhqeGZneWR4cHlpZ3B4eGdxbnBoaXdtd2Nybmdrd3RiZnNrcWthZ3VjcmdmZWludHJ2eWJydHlxZ3R0dWxhdGZlaHFncW14YXdlamRyZ2hxaW1ta3F5ZXVubWRkdm5jcGRtYXhnbGlqb3RoaHV1d2JhZHlqc2thZ2ltdHRsZ2ZmdnFxeWZ2bHJ2ZGFnY2h5ZmN1bGdubG94aWVrZHJtZGZpeG9wbGxwY3ZubG9yeWF4ZHJ0YWd0eG1tb2VwYXJ1aHV5eWVmeGFsdmh4cHF3ZmdocWR1YWlpaWx3cW1sbWdrd2hnZGRsaGp5aWFteXBub3lxYmlnaHhiZWxzZWF3dnlrdHh0eHhsaml2YnByaG5wbm9qeHllZm5ybGtyZm13cGVzcm1xZXNzYmJmd2hwbHB3bHlpbGRrc3FydGt1anNkZGpwd2Rnc3Bwam5qaGJxdnRycGNic3lyaGtra29qanNtZmV3cHZtdnFtbGRkYnZicGx3dGpxa2R3aWVnYWR3dXdmbHJ2cHBkcGl1dGd1bXJxeWh0ZXN5c3JxdHhrYnh2eGV1a3FycHVzYXRjcnlhd2tyeHVzY3hvY3RwZWlzdWlrc3ViZXJkY2FxcG9weXJraWp2c2RodHZyYm9vbHJkZ2dma3NxbW9rdHRrdWtudnB0bWhjY2htZ2Fpa2JwdHJwaWhycm5vY251cWlrcmh3Z2trZWR3bWF4dnRvdXNiZ3dwcWFndGt2dXRrY2R2eWdjc3dvZnlmeXl1aGNkb2h5ZmdxZmpxdnVza2draXZ1Z3ZmcnVvdGRub2piZW1rcWxpaXZjZ295cGZ2bnBkeWNuY2h1cWtpZndqZ3hrd2ZwdW9oanB0a2RvYnBtZGlyZGNtaXBieWFjaXVpd3ZubXNzcmllZHJ0dW9mbHdtbGxycWx1dWloYmVpdXBkaGxobGVmbXN0Yml3ZWhxZ3dwcWhyc2VmcGdsZmxieXRwbGlybnNzbmN2b2pjb3N2eW9lcHN2cmxpZGZzeGxrZWpxamJkdGttdXllY25zcmF0d2dtd3l0Z3NjeXlqaXd1ZG9mZm1pcHBlZndiZ2pub3d0dm9maW9xbmpxcG1nbHd0bGhydHlxbml1aGV5c3Z4Z2ZrYnZqdHF4eXNrYXdlZml1a3Zzd3BzYmZubHFpYWt3cnJ1b25sbm1qZ3d4dnZuYnhqZWRsdmppZHJ3a2Vma2pnYWd0cXhob2FyYWphZnB2c2JrZ3ZvZmdycnJwd2h3c2ZtcHRmaWR3YWNldm1uY3hjZ2RpbnJpa29qanltYmxwdGVscWt2eGh4am9uc2ltb2NwbXNzY3hteG55cXBhZGZsY29zanJkY251Z2J2Ymdtd2Roc29rbmxkdXFlaHBqbWh5ZXN4dWFrdmhldWxpZmdsa2JvaWZuZGZocGt3eGRubWd4eHhmeHlndWVyZ3B5bXJlZWNod2dnY3lwd2h1anBzaHhhbnBnaGhya2JsandpbGFsbWtzYnRjbHdwbnZwd2tteWp2cmRndHZla2pjZmp2eW1za2NsbXJ0ZHNvcWZpeWhvbGN2aWl1bnhxc25xcmd4aXR3eHRxZnB5Ym1ma2V5aWp3cXFwYWhsZ3d5anlnam93YnFhY3JmaGNodHJpd21qZWJqY3J3ZXl4ZGNxZ2VudGpiZHd2eWR0cGJ4cGxjcHZudGtrYnRoZGdoamRhZXNqdG1jZWJ4a3h2cGpjaXFvdmV4dWR3eW90YmtjYmd1cXd2aXRzZmZmZGloa3Z4YXJieGtuanJsbnloc2xtd2JseWFtYmtzeW5rZnhmZHZkaXZrcGJtcGRjc2trcmh5bGZ4a2dqYWJyZG9nd3hpY3dtc2FzdHdzdHR1Znd2aGpuc2ZxYmp0Ynh1b3Z3bGE=
		i: number = 19
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 37
		data: string = 
		i: number = 19
		leftbits: number = 2
		leftdata: number = 101
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 37
		data: string = 
		i: number = 19
		leftbits: number = 8
		leftdata: number = 101
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 37
		data: string = 
		i: number = 19
		leftbits: number = 8
		leftdata: number = 101
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 20
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 20
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 20
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 39
		data: string = 
		i: number = 21
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 39
		data: string = 
		i: number = 21
		leftbits: number = 6
		leftdata: number = 27
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 39
		data: string = 
		i: number = 21
		leftbits: number = 6
		leftdata: number = 1767
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 39
		data: string = 
		i: number = 21
		leftbits: number = 12
		leftdata: number = 1767
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 481
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 22
		leftbits: number = 10
		leftdata: number = 481
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 8
		leftdata: number = 108
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 8
		leftdata: number = 108
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 0
		leftdata: number = 108
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 44
		data: string = 
		i: number = 23
		leftbits: number = 0
		leftdata: number = 108
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 27
		data: string = 
		i: number = 24
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
