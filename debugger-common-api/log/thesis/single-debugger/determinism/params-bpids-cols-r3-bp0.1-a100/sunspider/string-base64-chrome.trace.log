Breakpoint 0 Set at 42:21
Breakpoint 1 Set at 42:21
Breakpoint 2 Set at 119:11
Breakpoint 3 Set at 75:21
Breakpoint 4 Set at 128:5
Breakpoint 5 Set at 42:21
Breakpoint 6 Set at 96:9
Breakpoint 7 Set at 92:18
Breakpoint 8 Set at 121:15
Breakpoint 9 Set at 42:21
Breakpoint 10 Set at 103:9
Breakpoint 11 Set at 42:21
Breakpoint 12 Set at 60:9
Paused at 42:21
	Hit Breakpoint(s) 0, 1, 5, 9, 11
	Call Stack:  
	Bindings: 
Paused at 75:21
	Hit Breakpoint(s) 3
	Call Stack:  
	Bindings: 
Paused at 119:11
	Hit Breakpoint(s) 2
	Call Stack:  
	Bindings: 
Paused at 121:15
	Hit Breakpoint(s) 8
	Call Stack:  
	Bindings: 
Paused at 121:20
	Call Stack:  
	Bindings: 
Paused at 128:5
	Hit Breakpoint(s) 4
	Call Stack:  
	Bindings: 
Paused at 60:9
	Hit Breakpoint(s) 12
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 61:9
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 62:13
	Call Stack: toBase64 
	Bindings: data: string = 
		i: number = 8190
		length: number = 8192
		result: string = 
Paused at 129:19
	Call Stack:  
	Bindings: 
Paused at 92:18
	Hit Breakpoint(s) 7
	Call Stack: base64ToString 
	Bindings: c: undefined
		data: string = 
		i: undefined
		leftbits: number = 0
		leftdata: number = 0
		padding: undefined
		result: string = 
Paused at 92:23
	Call Stack: base64ToString 
	Bindings: c: undefined
		data: string = 
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: undefined
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 0
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 0
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 1
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 1
		leftbits: number = 12
		leftdata: number = 1799
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 2
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 2
		leftbits: number = 10
		leftdata: number = 481
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 56
		data: string = 
		i: number = 3
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 56
		data: string = 
		i: number = 3
		leftbits: number = 8
		leftdata: number = 120
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 56
		data: string = 
		i: number = 3
		leftbits: number = 8
		leftdata: number = 120
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 4
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 4
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 92:39
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 4
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 6
		leftdata: number = 1671
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 5
		leftbits: number = 12
		leftdata: number = 1671
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 21
		data: string = 
		i: number = 6
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 21
		data: string = 
		i: number = 6
		leftbits: number = 10
		leftdata: number = 469
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 8
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 8
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 7
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 8
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 8
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 8
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 9
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 9
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 7
		data: string = 
		i: number = 9
		leftbits: number = 12
		leftdata: number = 1799
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 10
		leftbits: number = 4
		leftdata: number = 7
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 10
		leftbits: number = 10
		leftdata: number = 473
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 25
		data: string = 
		i: number = 10
		leftbits: number = 10
		leftdata: number = 473
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 11
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 11
		leftbits: number = 8
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 11
		leftbits: number = 8
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 11
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 11
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 42
		data: string = 
		i: number = 11
		leftbits: number = 0
		leftdata: number = 106
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 12
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 12
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 12
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 12
		leftdata: number = 1686
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 12
		leftdata: number = 1686
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1686
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1686
		padding: boolean = false
		result: string = 
Paused at 108:13
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 1686
		padding: boolean = false
		result: string = 
Paused at 92:39
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 13
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 92:23
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 93:30
	Call Stack: base64ToString 
	Bindings: c: number = 22
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 14
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 14
		leftbits: number = 10
		leftdata: number = 417
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 52
		data: string = 
		i: number = 15
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 52
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 15
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 52
		data: string = 
		i: number = 15
		leftbits: number = 8
		leftdata: number = 116
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 16
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 16
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 28
		data: string = 
		i: number = 16
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 17
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 17
		leftbits: number = 6
		leftdata: number = 28
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 17
		leftbits: number = 12
		leftdata: number = 1846
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 18
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 33
		data: string = 
		i: number = 18
		leftbits: number = 10
		leftdata: number = 417
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 36
		data: string = 
		i: number = 19
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 36
		data: string = 
		i: number = 19
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 36
		data: string = 
		i: number = 19
		leftbits: number = 2
		leftdata: number = 100
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 36
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 19
		leftbits: number = 8
		leftdata: number = 100
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 36
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 19
		leftbits: number = 8
		leftdata: number = 100
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 20
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 20
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 26
		data: string = 
		i: number = 20
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 21
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 21
		leftbits: number = 6
		leftdata: number = 26
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 21
		leftbits: number = 6
		leftdata: number = 1718
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 54
		data: string = 
		i: number = 21
		leftbits: number = 12
		leftdata: number = 1718
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 6
		padding: boolean = false
		result: string = 
Paused at 100:9
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 22
		leftbits: number = 4
		leftdata: number = 397
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 13
		data: string = 
		i: number = 22
		leftbits: number = 10
		leftdata: number = 397
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 99:9
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 2
		leftdata: number = 1
		padding: boolean = false
		result: string = 
Paused at 103:9
	Hit Breakpoint(s) 10
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 8
		leftdata: number = 110
		padding: boolean = false
		result: string = 
Paused at 104:13
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 8
		leftdata: number = 110
		padding: boolean = false
		result: string = 
Paused at 106:13
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 0
		leftdata: number = 110
		padding: boolean = false
		result: string = 
Paused at 107:17
	Call Stack: base64ToString 
	Bindings: c: number = 46
		data: string = 
		i: number = 23
		leftbits: number = 0
		leftdata: number = 110
		padding: boolean = false
		result: string = 
Paused at 96:9
	Hit Breakpoint(s) 6
	Call Stack: base64ToString 
	Bindings: c: number = 24
		data: string = VxeW52ZHFva2h1bW12cnVhYW5naWVnYWdqcmlodXNid29scWxsaXdkYWhsdGRud2ZybnNvY3V3dnlueHhxeXRub3draHBheWhzeHFzZ2F5bGFkcGdyYnBhYmNla3RjcWhxZXVnZmhqb2J3ZXhvdGtxaWl1cG1lYXNiY2RldGVucm5wYmZsY3hiY2pubXhmZXRjbHlveXZ2cHBxdmRzb2x5dnZ2b2dma2FkY3N2cWl4Y2ZhY2NkdHRsa3dnanVuZ2VmbmdiZml5Y2ZrZHh0eW9xd2RucHN3Y3B5Z2d3ZGtxdm95dHh2Z3lpeHNzb3hpbWJ3cHVwbHhyYnJjeXJjbGNuZ3ZybnZrYnBmeGdzbXZudmxqdGdkb2xxa2Jsa2hib2lxZ2ZiaHN4a2dzdHFtZGJsZGd5eWlyaHJ5Z3FmYnd2ZmRoeGd1YmNpbHBkd29ob3FhdGF0dnBjZW94cGdudG9wcXR5cml1YWxxcGlhdHhkcmZybmp0ZHV1c2t2ZnRweGltd2hteG9hY3ZudXFldnFtZmF1aWFwYWxqdHZoZGVzdHNpdGd0bnF3a3R5eGRqbGFsZ3N1aGdndW5idXFhcW1ieXdobW5scGRsam1zbXNxeWhrZXN4dGN5amdmZm54c3Z5Y2NiZXNycnF3Z2ZkYXdxeXltaGxna3hqd2V1eHRhYmppbXNkZ3lqa2dtbXFiZ2RubXFqYWZpd2VleWdqcGlscWZmYW9sbW5sa2Fnc2lpdG1zc2RldWpxZnRxY2VmbGJkbXJranNsaXl3b214cG9xd3Z0dmNjZnh5cG1icHBlcnB4Y2Z4b2NzY3Rxamhmb3N0b3ZwY2l1b21iZmhia3NsYW1uZGZmYmh1Zmxubmp2YWtsYXRqYXh2d2hxdXJnaXVvYmVodGtncWdob2h4cmZ1b2FxcHhta3lka2FkcXZ3dmNubXZyeWlxamJrZG5iZ3NmdG1ubXh5bG15ZG9ycXd2eWFmaGJiY2tzZ2xicXdvdGNkcHZrYnJqdW5qcGdseXliZnhtYnJpd2tsaG9mbXlvcHRyZGVlcGdwd2RjaXJvZm51b2Z3d2p2eW9id3Bkd2NmbHV0cnR2aWxuYmpqY3R5Z2tpeHF1Y3hrZmFoZXVodGdqeHhld2h0aHNpcm9pcHVuZGN4Z2FiYnhveXZteHBnaXJxbW10c2N4aXZvaHJqYm9neGl3am9sdWR1Z2hwb2Fzbm5zanZuY2V4dW5xdHlwcWJ3eGdqampraGFpZGJuYWh5YWZja3V5anZyd29mcWhtb3lidWduc2p0aGJ4eHlpeHBhaXh3Z3F3YWp2c2libGJubXNuZXlidnV2Y2FpamFjcWtwZmpvd3Z4dGN4ZHRkd2t0ZmFld25zcGR4aG9mbWt0bGdvcGR1ZW5udWVicXNlaHNkcnFoYWVndXdncnJjc3ljY21oaXh1YXJqaWxpbWR1a2N5eWhubmxqYnhpdmxqbWhmd3VubHBweGd1dWZwYXdrdmJraXNxaG1pbHR1bHdza3ZvanF0bm9seXlyZ3J3cXhvZ2FjZ2lobGlsd2RiamJmZWtmcGRpYmVycWFqcmdtc29pdGt2eW5kZmpwYXdsYmJtaGx5ZnlucnlpeHFqdGJuZXR2Ym1la2V4ZGtydmJveHFzYmZseG9manJhd3Fva3V5amlpZm1yeHFmd21xcXJodG13Y3F3d2pscmtiYmJnbnBkaG5lb2tmcnZlYWl5dHRieGtxYXNvZmtuY3lxaG1xcm95cHJycGRianVhb2J3Zmlwd2tnYWFraXRtbmllcm9peHZ0ZnV3bHdoYXZ2eHJnZmx5ZnFheHVuZGZ5d2dzcndkdnV5d2Fjb3J1Y21mYmJia3Rxbm15bHRiaHlwdmdtcmRkc3F2bG1nZ2xxamtnZHFvdHRpb3NkdmFsdHFmbHFlYm9yZ3NjdXF1cWFzdGlra3FjaWF3ZWNubmZscmF0YmZ0bmx3d2p0YW5wcG95dmpreWR2Ym5hZ3Jnd2xvdWtubWNxZXdxaGx5c3NwanJjbG5jb2lwYnRuamx0eWNrbWF0Y2hrYndheW1iZnFyc3Z1aXBndXR2a2ZibWNvaWRidWhuam5xYWhodGpveWVjY3ljb3hmeXNhbm5pZ2djbWFtdGRweGNuYXZqY2dyb3lraHZkbXBna2V5eGJqcW5sZ2JneHZ3cmhpc3Nudm9zY21rZnJvamluaHB0YmhwZG13Z2txbHVnbGduZ2ZkcGhudWdvdXl3dW92ZnZidXZla3huc2lxY3VrZWt5cWJnZXVtcWhscnZrcHZscGpmZGxhcndpaHR2dXF0YmRianF5eWJ2cGZucW94aXlpeG9oYXZvbHl4bXVwd3h0bGFkbm9yanNzd2lvY2lzeWZlYXV1d2todXdmbmpvZmdzcWNjYXRwY2pjZ2xxcWNkd2JjdnVpY3hqZmR5YnlrdWNmdmp0amFsdGhiY3RsYWF1dnhwcHdzdmNxZmprZmhrYnR5YmpudWJhcWNidWl4YnhiaXl3Z2tob2FyamZqdmhwbXZsbGprbnZubmhoeWJpcndkdXNmYmVxZGJ2a2RqdHNvdHJ3ZGFrcnBkamVpaGxnbHJtcHJmaXN0dm12c2lpb2JmaWJ0dnl1bm5uYnhmdWdtdHZ1ZGh4bmp3YmZhaHdtcnhjYWN4bGdvbnNoa2xiYXJpeW1ubmxwYnlhcndoaWFqeHBmZm1tcXVqdHFhdWt1Z3NreWFrdGhmdWR2dmN4Z2lyZXdtZ3ludmZ1eWVvanZhbnVlcWNneGRieWZsdXVsaGZhZ3Jyam5mZG5hdHNsZ3J1bGxqbHhldXh2Znl0YnVlY3R2cHVidGFqc21td3ZpZnh5a3Bnb2x4aG5ob25nb3Z0ZmV1eWppaHJsbHdrbXRhZGFpbXRhZGJiZ3JhY3hud2R0anZidG12cmNlYWxkdWF0b3ZmbXlyc29xbG5zcnR5cnNrdGVib2doYnZ3d2Jrcm11ZXJreXRsbHRhYXFieGhwd2p0dm90Y2JhbGpta3liZGRibnRmeXBwc2JxdmJ2am1seGh4aGpmbm9qbGxxZGFocW95dHdqeWloYWNkd3N1eGR4bXRteHNmdXlmeGliaGVub2hibGVxbml5YWVoZHdra2FrYWVlcGN2dW1tbW1lZnZ3eHBwYWlneGVzZ2Rna2N1Y2theXRudXB5ZnRwdXV4dHFjb3R1eG1mdnl5aWphY2RoYm1zd3V4Y3B0cXNleWRtbWxzdmliaG5raGhzamZpbXFmbXdueHlkYmJydm1zYm55Y2Z0b2ljaHd5anVnd2VucG9mbmd0aHBnc2Rwbm93dGxnYWl3c2ZqaHlkd2hrdGt0aWJ2cHhnZHVsbWpzdG50b3RlaW93dm9hdG91aHJxcGNmcW9qd2ptcHdlaXhpc3N0amJjd2Z1eW5vaWhvcXJob2ZyZ2dyYnNmZW9jdW1yZGd0dHV1bHZ2d2V5ZGN3bGNhbXB2d3RkaWdoZGtua3RkcmRrdHBnbnlyZG1zdmZ4cWJjamJubWxtcXFmYWpucmR2Z2N2anF5Ympuamt0aGFobG5sYWt4b2JjZmxieWR4d3Z3Z2d0dnZtdG9ya291cmx3bnNmcWpyamNrYW1yYmdka3V2d3dtcXFxcHZ4aGRqdWdiZmdjcHlmbW93bHFteHh5eXVydXBlYnZjY3RleWZscWtqbG1mc295bWxpZmxvZ3VmeGx2ZXZqd3N4aWhlY3dpdmtjYXhxYnRnZmRkbmxjeWpoY3l4cHdjZmRmbHdrbGlrdXh2dm9sa2ZjcmtqY2dobXVka2J2cmx4d2V2b3lucHJpZ3ljdmlyZmhyeWd1YWtjcG5rYmhtcGN4c3ljcW5kYWRzbnRoZGx4ZHhnbmZwZ2h4dnVpaWNramR1YW1tYWNnYmtrcGVzaWJlbXBicmpkaHBya2l3ZHhheGxmcHJqY3B3YnN0bmxhdXZkanNyeXJ3cXhodmFrYWZvdWNtZnFwd2F5cHNkb29weGlnaXZkd2Nzcm1pcGV0ZW1wdHJjbHZub2Rra3NjdG9jY3lvbm92c3lvZXNzdGp0aXF1Ym5sd2F5cnJibXZpYWdub2hqdGhseGptd25jbHl0dm9ma2xkZ2lvZWd3aWZrZXJzZWxjcGdtaWVxcWhydHdvb25neWhiaGhlZGpjdG1leWZzZWNhc2FuZHl3eXJwZHhrbGptbWRqdHNvcXJyb21hbWptYmJjc2pmeHhqcXlpY3N1b2Rra2Z3cGVqdWdyb2l3bGN5b2dycW9obXloYXN5a2pxbm1paHNndmtlamhqZGJ5aW9uZ29ldGp1dWtlcXBjeHFtdGplamF3YmNnaWdrcmZhbWFleGVueXBwYnNucHV5c3FkZmxkdHBqbHNqZXdtaW1vdHh1aGZxaHh5YnR4YXFhYnd5eXRpcHBuaXF5eXdpeHV0b2JzdmVzcWhib3Fnaml5ZWx0bnd4eG1rY2RkeW13ZGxlcmJhZnh5b2dzZ2ptb3JlYnNlbWx4YW9veWRob3V1d3lseGNxbWhtZHN1eHFndXNvY2dmYXl3Z2F4dmxvcHh2ZnVsbWVreXNkdmJ4bnVnYnNycXJxdnBzYXFjdWFnaWtuanZyZHdjY3NzYnl1YXNjZWFuZmNpZ2dweXRyaGt1dWhpaWprcnFpY2ltcnZvYXJwcG1id2Foa3lrdHBpbmlnaXl4ZXl1ZnVtcG1obmJ2dm9zeWl1bnVpaG1ydHZqeWN3cmhrd3BrdXhsbGVmdXNsaGZ4ZWpibGVnYnBjbml3eW5jb3ZuZHRxbG90ZmNraXJyZWNwYWRtcHRyZnNjaHlybHRxanBucmhmbHR4dW14dWZ1aXRocHhzbGFrbXdyY2ltcnNoZWNoeXh0ZXJqdHZ4eGFldnhxbmRxeG13aHdwY2RiZ294YXR2Zm1ocnZnbG90ZGVoc3llb3NmYm5nb3hwdmducG1weWhmZGpzaWRjdXZqc2d5a3dubWhsc3dod2hqbmJxanNhZm90ZmFzaWdqZ2Fwa3dneXVzZ2V0a2N3b2JuZWZtbW5obHdjZXhicnRla2ZhcmFiZXNuY25uZnlvZG5neXBoeW9wYWttc3ZlcmN5aG93cG52Y3dzb3RwcnluZGtjaWJpbXRhbXBmdXNtaWFtZ2tqaGhkamN0am9kaWV4c253bWVyeHdjaHB3dGNhY3F1aWp3ZmN0cnZra2VyYWd4aHJ0YmV3YXNuaXN4eGt5dHB5Y3ZoeHVpcXRjaHJvb2hqZGRjbmdnc3BiZnF2cndoeXFhdmlsZ215ZXl0Y3JkYmZseGpyaGJ0b25lbXhyaGNyb2JkZnZldXZvcnN3amNrY2dhZ2xxc2Nxam9zbWxldW51cndkd2hxZml5Z2Rid3JjZ3FrcnJibXB2bXZkaWxuc2lqZ213dXVxYWFsdmdjdmd5ZWpmZnZvc3RtYnBseHVramVucWNmcmNmZWlvdmpnd3ByZnF2bnZjZHRxa3V0c2J1aGZybWtqbGJxaXBlbmduZmNwbXVvbW5teWNrc3ltbHluaWxuYm9ka2Z2aGZ3bWVsbWx5bmxicG52aXVvcm9mdWJkd2R3dGt2YWdndXVlaXNoanhoY3NxeGV0c3lhanZkZ2lsYXZ3YWZybWVudHFocXBmd3N2dXhpY25sb3FkdWJieG1laHdlaGRuZXRxanR4ZWV0c2pndHd3b2Rvd3ZleHh5Z2JvbWFnYmRuc2xvZ2dia2JweGZxbmx0aWh5cWFicXB0YnFseGJzeG1tcHZsbW5zb3V2ZW9pdm9vb3l4Y3Rqd21zZ3JmandtcXNtY2lsZHNxcWJxbm1jaXlmZ3Bxd2FhcXFwZHFpeWJmb3B2eGZ2Ym5xbGZzeWdsb2xhbXd4c3lnd2R4Ym5ubXRoY2RoeXR5ZnhzcG1qeXB4a3BjaGVoaGJka3BpYW12dHdzY2thdmR5eHZrbWNsampra292ZWZyZ3JvaGV0a3h1c2FlaGZkaWd1cHNsaGtjb2RudXdzeXFxYnZsc3NqdGNiYnFiYmFra2VzdXFoaWhqbmR4bmliaGxvYnJqc2V3aGd2cHJrYWFqZ2p3eHJ4d3dtcGR0d3BqbHN1dHN2aHlqY3Ria3VsZWJpbHJoc2R3aGZ3cnhvcXJwamJibGh1YmFzZHFnZnRuZWJ4cnZjamZmbHRsYnVtZ2ZiY3RiYW1xeXZxZ2pkYmp5dW91ZWhpeWZkYnNkY2tyZWNybG54bGFkcG9kc3BpbGt2cG10b2hlZndubWlvdmxjdnZ1b2ZjbWxrZnd0bXJzdWRxbGhjcHlycGJhd2tmb3R3a2lzb3VrZHd1Y2VjcHdhZ3FhcW1obnlxb3NueXJ5YWxqdGFqdm5jampwbWxncHdubGZ1Y3ZzdXRmcGNqeGhnaHZxdmJrdmhnbmhpbW14anNkbndudnZxcXlxeG50cWZlZHZvanZ2amx5a2psdmNjbW15eWRhc2pwaWF0YWp2a2t3dHBscndwcGx4bHRrYXlndGxhbmR0b21tZG1zZ2pzaGtoaGpqbGdhZGZmdnl5b2NmZXRncmhzd2dldWdtbXBqbWl3cHN4dmp1ZGRoeWt2Ym10ZXZycGd0ZXNqbG9qZXF0YW5vZGxkaW5zb3l3cG5ydWxxamRuYmxpcWt0b2Vic21yZG5tdmFlaGZuaXRvZWV3ZWF0bWpsanRyaHd0eWJyd2NnY3VvbGRuZXNjYXVvcXNob2hodGhob29qYWx1b3ZteG9scWhtc2ZtbGdvbm5vaWlvcnFyZmJodmFrc2toZG5iZnRnYWpjdXhkYXhjd29yam92am5kbGt2aXl0ZmFrZHF3YnNodGhjaXRobWRweG9xZnJkdmttanR0cXdldGhvdW9hbmlheWVmc2pkdWptbGp2dGF0Y3VvdXd4bWlxaHZ3dXF0b2l3ZWdwcmt1cm9obm5ycmdna2Fmdm94dWJueHhieGlqaG1sb2R2dmpzb212dGdoa21tb2twZHhtd3NzeHRmcXlua2N0dWltanZtYWxpdWpydGtvdGp4cmVna3VydnFzYnJjeWdlYmpsY2xoYnZ0b3hueXhicHZ1c252ZmNkamFoZWZzdGlhZGNsZ2hjcWVqbmxjd2NsZ2xqaXZiZWJkZ3NkZXlkaG1qdHRkbGZ5dmdheXhrY2ZxY3Jjc2ZxcXdyc3RtcGljbGZsb29zZ3JldG1ic2FsbXh4bHFmeXBjc2VnYW5jbWdoamltcHNybmNma295dGt4Zm5wd2VwbGZvcnFjZW1yamNvd3V3Z2hrY2N4dWphd3dvcWV4aWt0c2hzYnZpZHJqa2NucW1tcG9ramd4dHhpbnRkeGpxanZzdWJxc2tpaXJtdmZvdGVjZWRkY3Z1aG9qaWpxdmh0a2h4bW51dWltYmdqaWxvaHFoY2tpcmJxeHRjaGtyb2lyZ3l3dWJhdXZyanNmdm9ocXFqYW9pand0b2Rkd3BlbGJ2cnljeGxkdmRzc2VqZHF2aHl5Z29yaHl0b2h0cXJpYmxveXFpb3Vpb29qamxnZGZuZXVhd3NweGp3YmtvbGRpbnhhcHZldmhhdGVmbXlra3l4anBqYmJraXBkc2RiZ3RyaXljZXlubHJpaGdvbnFhcHh2aGVpc3JqanZjY2d4b2JsaHBiZmpjdnBnaG5wcXJ2cXRvamFrYmRwZmp1aHlhb3VqamdoeGV2Y2pwbnV4ZGJja3Nkd3Z5eW5kY2xuZmJ2b250YWtld3luaW5nbGl5aW9jZXZlZnVydmJpYXR3YW5sbHZ3bWtjaHVoaHNmdW1oaWxtd2xmbGhudnFiamxzZ3lhcXBnb2lhYnRuZ2NnZXdrZmljdG9kanZhc2VuZWducXRsanVndHhoaXlreXZkZ2xrb2ZkZmtkZnJjY212eGVhcmdmaWdma2Z0eWljb2RoZnV2cm9ueWV2bmxza3d2dGRmZGFrc2p5aXJpdHFya2xnanRjeWRqaWt2aWZkcW1zc3BqZHZoZHR0dWNkcmFkZGtjcWZtcmp4a3hya2plY3Vnd3BwdXZiYnBtaGh1cWlqYWV3Z2F0c3JhcGh5dndwaG54b3hwcm9mb2x5Y2JvcXVhcWhub2pkeGNzbWdzZWJhc3JtYWZrb2hyZ2prdmJqbnJqYWlocWRmdnlvZHBkZ250cmVyaWdjcGJseW1xdnd1cHJxZHFieG9obnB2Z3l1cnFpbXZ3aXVjaXZ5cm5tdnFqaXV4eGxja2dyaWlzYWZ3b3drb21wYWZ0bWFlcWV5YmRydnF0YmxhaGpndmdsanNxbWxuZ3NndHN2aWhxdHNpYnFrZ2JrbXRzZHZpY2dtdGFka3Jqb3RsYmJzdHRkb3NlZWh4eWFmeW9ueWZmZ2R4Ynd5cWVtaWpteXhmamNqdXBybWpmd3FkcmdlcGV4bm1kbWZ1dXV0cmRsbnh4a2l0YmV3eGxwcWd5ZHhkamFlcXFjb2F4aXV4amtrY3Vuc3dlZ3JqZmRxa3V4eWl5aW50amVrZHJrcXJxYmd5cmppcWJ3d3draGlyYW5mdHZ0dHhzdGN2ZXFpa2JhYnVnamZteW9ldHJidndwcWZ5Z2JkanBwYmVjeGlnbmxha2NudWpucG9iZXdsdW1tZGtsZHJsc21nbWJzeHJubHBxb3lnb3BqZ212anNpa29qZGVrbWphaHh4a3R1YnRpd3ljbHVmYmt5dHdyeHBjY2lkeWx2aXBjbXBuc3VpcmVndWRjcmFteHVqaHhyZWFmeHV1Ynh4aXNldmFoeXlhY2hocnJjcXhrbGJpZHdnaXdmZXVsdWlyaWlyeXJkZmdjcXZnd3hlYXJyY3l3dHJ4ZHVqY3FxbG90bHNmdmlrcXV0dmtwbHVuYnRka2dsZHFsd2p0dGx4bGRxdWt5dnhhY2dtd3JxcWVwa3J2b2lucG1xZnVoZW1teG5ib2NvZGJ0Z25ieXRobnhrYnJiaGtxYXBpaGtreWpjY3FudXBxYmVhZmhudm9naGV2dW12amZxZmJud2J5dm9tdmNrcG5oa2VhbXFobWRkcnZmcnNxZXhtampkcGtza29laWJ4YmFia3FmZWVmZWh1amdob3V3cHFzaXNwYnd3Y2hrYXJvZ3Bnam1tZWFmd255aWNpcm5hc294d2pwbGRzY3JyZGhncHBseHhod21ua2JqcnBzY2pqb2N4ZmZnZ3dsdWNqb2JidHh3aWNzdXdxdXN1Z2Rhb2V3cGR3YmdibmVwY2JvcmFvZ21vYmluY2p3aXF5cnlxY25xbmJna3hyeWhuZ2NjeGpqcWphamx0b2l1bHVzc3hiZGF4ZnlkbXNwZXdoaWJtdHNyaGxsZHNjZXd3eG1xaG5icnN4eXhiYWlieHNleWRld3lqaW50b2Rta25ucnNjbmFzZ3NpamJqc3hzYWllcHRjdG5jdW9hcGpveWxmeWFteGN4c2d3dnZrdWljbWJhdHltcHFzaWxsZGNiYm12YmJtbWRwaHJibmhqdmJwb3VvY2t5eXBuZmFpcXB0YmFqaGlucXhtdmhvZnVldHd1bmJrbWNxZW54YXRhbmtjcGxpZmtkYmd0ZmZwZGZqeWtodHBwbHZqYXBxeGRxdWJ0amNkY29mZG9ycGFhaW1uZWpqaGhjeWN0ZmNudXdqZGN1bWlqZGh4YXhndXBvbHF5aXV1a2RudmxhZWtoeWN1Z2F1eXhjamlubmRsa3ZkcnN1ZndhaHd5Zm1pdWdhZW5rYXhvY3BueGlhaHNzZHd2YnJhZHFwZHdicWZoa3NtYmFqY29pdXdvZ3dydXh2bmdmY2JramlocXdsYWJsc3V4Y3ZvZnFrYmFxa3BnYXVnaXJybGJ1dXRydXNnaHNvdW5ianBta3ZibWdpeGVub29ycmpnZW9ydG11ZWprc2J4dnF5ZW53eWtucHhlbHlrbHFzd3l2d3B1ZHRjdHFobGVidnh3cG9kcXFhbHB2YXdtanhwd3RzeWpwamNtd2lnb215cXd2b3dsaWxoY2ZiY2VwbXhqZnlxcGNnaHBqcndma2ZleW53cnN4dnV1bm12dWJrbXhmdGNwcGVkcmFrbHB0a2NheWRyY3hva2NudXdmZHNpd2dnYnF4ZXFnamljYXNpc29iZ2F5c21odG5lbXZqYWt4ZHh4Z2dycWhtcHB1a3F3dGNza3VrbmZ4c2NzcXRma3h0Y3lqanhmanloZm5hb3B2ZHhkeGdhbnhxd2Jlamt2dWZtaXNlb2Nrcmptb3R2ZHR1d25nZnJjY2RkamxmcXN3cWJiZWhoeGpicWZlcmJvZ3NrbGVvZGp0c2Jqc2piY2JnamJzcnJlZXJldGpvZGtveXRvcmdweWtsZ3RzbnFrcGNxamplZmxwb2ZiZGhseHVweWh3aXR4bW9sYnB2cnN5ZHR1b2h4dHltdWlpdXRqd2J3ZHF0YmZ2YXBvb2lvbG9rb25jbWhpY3VycmV0amp3cmR4c2xzcnNvdWFhcmp2aGJ1ZXBqb2h0d3JlZmxpdnhqcmxmY2lmZmxjc25uc2lxd3BtaWJjd3Jjd2ZncmxvY2NsZ2NjZmhwb3lodHVnY3BqZmhjY2tvY3NhcWNueXJ4Z2ZveG50b2xmeHJ1ZHNjamF3Y2Jkb2ZkZ3dsbXNkdGVpZWFoZm1ocnlkdHJhZ3N0dXB5dGVueWFjaGxqeW53eWl1b2NsbGZ4c3lxbmJyYmlieXVsdnBzaXRmbnlxc3JkZ21weGd4Z3JiaWxlaGxmZmtzcHJiZXBwdHNhbXFjdWxodGpnaGRyYmNwZmdsdWFndWNhbHFkcmRsYXZyeGx3ZWRuY3Z0bnlicWJ4ZmJhd3ltdGpscWdsam1weWF4ZGRiZHR2aGVjdWJzdXN1eHRxeGtpb2tkYWFsdm5ubmx5eHN0cWpycmlhY2Jkcnh4bmxvbGw=
		i: number = 24
		leftbits: number = 0
		leftdata: number = 0
		padding: boolean = false
		result: string = 
